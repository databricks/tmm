# yaml-language-server: $schema=../bundle_config_schema.json


resources:
  jobs:
    gourmet-workflow:
      name: gourmet-workflow
      tasks:
        - task_key: lf-connect-franchises
          pipeline_task:
            full_refresh: false 
            pipeline_id: ${resources.pipelines.lf-connect-franchises.id}
          run_if: ALL_SUCCESS
        - task_key: lf-connect-suppliers
          pipeline_task:
            full_refresh: false 
            pipeline_id: ${resources.pipelines.lf-connect-suppliers.id}
          run_if: ALL_SUCCESS
        - task_key: lf-connect-tx
          pipeline_task:
            full_refresh: false 
            pipeline_id: ${resources.pipelines.lf-connect-tx.id}
          run_if: ALL_SUCCESS
        - task_key: ingest-pipeline
          depends_on:
            - task_key: lf-connect-tx
            - task_key: lf-connect-franchises
            - task_key: lf-connect-suppliers
          notification_settings: {}
          pipeline_task:
            full_refresh: true 
            pipeline_id: ${resources.pipelines.gourmet-pipeline.id}
          webhook_notifications: {}
          run_if: ALL_SUCCESS
          email_notifications: {}
        - task_key: is_AI_enabled
          depends_on:
            - task_key: ingest-pipeline
          email_notifications: {}
          condition_task:
            op: NOT_EQUAL
            right: "FALSE"
            left: ai_enabled
          notification_settings: {}
          run_if: ALL_SUCCESS
          webhook_notifications: {}
        - task_key: use_Claude_LLM_desc
          depends_on:
            - task_key: is_AI_enabled
              outcome: "true"
          run_if: ALL_SUCCESS
          sql_task:
            file:
              path: ../src/ai_query.sql
            warehouse_id: ${var.prod_warehouse_id}
            parameters:
              target_catalog: ${var.catalog_name}
              target_schema: ${var.schema_name}
        - task_key: sentiment_translate_ai_functions
          depends_on:
            - task_key: new_recipe_Claude_LLM
          sql_task:
            file:
              path: ../src/sentiment_translate.sql
            warehouse_id: ${var.prod_warehouse_id}
            parameters:
              target_catalog: ${var.catalog_name}
              target_schema: ${var.schema_name}
        - task_key: email-exit_without_AI
          depends_on:
            - outcome: "false"
              task_key: is_AI_enabled
          notebook_task:
            notebook_path: ../src/Exit_without_AI.py
            source: WORKSPACE
          run_if: ALL_SUCCESS
        - task_key: update_downstream
          depends_on:
            - task_key: query_DBRX_in_SQL
          notebook_task:
            source: WORKSPACE
            notebook_path: ../src/Update_Downstream.py
          run_if: ALL_SUCCESS
          notification_settings: {}
          email_notifications: {}
          webhook_notifications: {}
      email_notifications:
        on_failure:
          - roland@databricks.de
      webhook_notifications: {}
      queue:
        enabled: true
      notification_settings: {}
      max_concurrent_runs: 1
      parameters:
        - default: "TRUE"
          name: ai_enabled
        
        